Revised Project Plan: Simple Wholesale Management App (Flat-File Structure)
This document outlines the revised plan for the wholesale management app, prioritizing simplicity by placing all core PHP files in a single root folder to eliminate path-related issues.

1. Core Technology Stack
This remains the same.

Backend & Templating: PHP

Database: MySQL / MariaDB

Styling: Tailwind CSS (via CDN)

Client-side Scripting: Vanilla JavaScript

2. Database Structure
This structure is correct and remains unchanged. You can use the same wholesale_db you already created.

-- Table: users
-- Stores login information and hierarchy for all staff.
CREATE TABLE users (
    id INT PRIMARY KEY AUTO_INCREMENT,
    full_name VARCHAR(100) NOT NULL,
    username VARCHAR(50) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL, -- Never store plain text passwords
    role ENUM('owner', 'manager', 'supervisor', 'head', 'sales') NOT NULL,
    reports_to INT NULL, -- The 'id' of this user's direct superior. NULL for the owner.
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (reports_to) REFERENCES users(id) ON DELETE SET NULL
);

-- Table: products
-- Stores product information. Starting with one product.
CREATE TABLE products (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    price_per_pc DECIMAL(10, 2) NOT NULL
);

-- Table: inventory
-- Tracks the total stock available for each product.
CREATE TABLE inventory (
    id INT PRIMARY KEY AUTO_INCREMENT,
    product_id INT NOT NULL UNIQUE,
    quantity_in_pcs BIGINT NOT NULL,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
);

-- Table: orders
-- A record for every sale made.
CREATE TABLE orders (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    product_id INT NOT NULL,
    customer_name VARCHAR(100) NOT NULL,
    customer_phone VARCHAR(20),
    total_pcs INT NOT NULL,
    total_amount DECIMAL(10, 2) NOT NULL,
    status ENUM('Pending', 'Completed', 'Cancelled') NOT NULL DEFAULT 'Pending',
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (product_id) REFERENCES products(id)
);

3. User Roles, Hierarchy, & Permissions
This logic is correct and remains unchanged.

owner: Full control.

manager: Manages supervisors, heads, sales.

supervisor: Manages heads, sales.

head: Manages sales.

sales: Manages own orders.

4. Core Business Logic: Stock Calculation
This logic is correct and remains unchanged.

Constants: 1 Carton = 10 Pcs, 1 Crate = 50 Cartons = 500 Pcs.

Formulas: Will be implemented in PHP as needed.

5. NEW: Simplified File Structure (All Files in Root)
This is the core of the new plan. All .php files will be in the main project directory (cigmobile/). This makes including files extremely simple.

/cigmobile/ (project root)
├── index.php           # The new login page and app entry point.
├── dashboard.php       # Main dashboard for logged-in users.
├── logout.php          # Script to handle user logout.
│
├── db.php              # Establishes the database connection ($pdo).
├── auth.php            # Security guard: checks if user is logged in.
├── header.php          # Contains <head>, navigation, opening <body> tag.
├── footer.php          # Contains closing tags and JS includes.
│
├── order_new.php       # Form to create a new order.
├── orders_my.php       # Page for sales team to see their own orders.
├── orders_team.php     # Page for managers to see their team's orders.
│
├── users_manage.php    # Page for managers to add/edit/delete users.
├── inventory_manage.php# Page for the owner to update stock levels.
│
└── assets/             # The only sub-folder.
    ├── css/
    │   └── style.css   # For any custom CSS.
    └── js/
        └── main.js     # For any custom JavaScript.
